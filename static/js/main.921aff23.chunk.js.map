{"version":3,"sources":["utility/helpers.js","utility/utils.js","components/YieldTable.js","contexts/filters.context.js","components/Filters.js","components/TopNavbar.js","App.js","reportWebVitals.js","index.js","utility/api.js"],"names":["arrayHasAnyOfArray","assets","desired","exact","d","indexOf","a","numeral","require","formatPercentage","num","text","format","filterPools","pools","filters","desiredCoins","strictFilter","exactMatch","desiredPlatforms","includeSingleAssets","includeLPs","desiredPlatformsArray","trim","toUpperCase","split","filter","pool","map","toLowerCase","length","desiredCoinsArray","exists","arrayHasAllOfArray","array","t","textHasAnyOfArray","platform","columns","dataField","sort","formatter","network","className","logo","Image","src","poolLogoUrl","coinLogoUrl","asset","name","totalApy","apy","g","Math","pow","log10","isNaN","calcDaily","tradingApr","OverlayTrigger","trigger","overlay","Popover","id","Title","as","Content","Table","striped","bordered","hover","compoundingsPerYear","vaultApr","beefyPerformanceFee","vaultApy","lpFee","Button","variant","tvl","YieldTable","yields","keyField","data","bootstrap4","defaultSorted","order","emptyFilters","defaultFilters","FiltersContext","createContext","Filters","poolCount","useContext","setFilters","handleChange","event","target","value","handleCheckBoxChange","checked","Jumbotron","Form","Group","Label","Control","defaultValue","size","type","placeholder","onChange","Check","Input","defaultChecked","for","ButtonGroup","onClick","TopNavbar","useState","copied","setCopied","Navbar","bg","Brand","href","alt","Nav","placement","Tooltip","onCopy","setTimeout","Link","App","setYields","useEffect","getYieldsWithPrices","_yields","fetchData","filteredYields","self","Container","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","networks","network_ids","getPools","fetch","result","beginningText","endingText","substr","replaceAll","jsonObj","eval","network_id","key","fetchAllPools","Promise","all","Object","keys","allCombined","concat","f","json","prices","apyBreakdowns","tvls","lpPrice","tvlToken","apyBreakdown","b","ticker","path"],"mappings":"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","file":"static/js/main.921aff23.chunk.js","sourcesContent":["export const textHasAnyOfArray = (text, array, exact=false) => {\n  for(const t of array) {\n    if(exact) {\n      if(text === t) return true\n    }\n    else if(text.indexOf(t) !== -1) return true\n  }\n  return false\n}\n\nexport const arrayHasAnyOfArray = (assets, desired, exact=false) => {\n  for(const d of desired) {\n    if(exact) {\n      if(assets.indexOf(d) !== -1) return true\n    }\n    else {\n      for(const a of assets)\n        if(a.indexOf(d) !== -1) return true\n    }\n  }\n  return false\n}\n\nexport const arrayHasAllOfArray = (assets, desired, exact=false) => {\n  for(const a of assets) {\n    if(exact) {\n      if(desired.indexOf(a) === -1) return false\n    }\n    else {\n      let exists = false\n      for(const d of desired) {\n        if(a.indexOf(d) !== -1) {\n          exists = true\n          break\n        }\n      }\n      if(!exists) return false\n    }\n  }\n  return true\n}\n","import {arrayHasAllOfArray, arrayHasAnyOfArray, textHasAnyOfArray} from './helpers'\n\nvar numeral = require('numeral')\n\nexport const calcDaily = apy => {\n  const g = Math.pow(10, Math.log10(apy + 1) / 365) - 1;\n\n  if (isNaN(g)) {\n    return 0;\n  }\n\n  return g;\n}\n\nexport const formatPercentage = (num) => {\n  const text = numeral(num).format('0.00a%')\n  return text.indexOf('NaN') !== -1 ? '🔥' : text\n}\n\nexport const formatInteger = (num) => {\n  return numeral(num).format('0,0')\n}\n\nexport const formatFiat = (num) => {\n  return numeral(num).format('$0,0.0a')\n}\n\nexport const filterPools = (pools, filters) => {\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\n  const desiredPlatformsArray = desiredPlatforms.trim().toUpperCase().split(' ')\n\n  return pools.filter(pool => {\n    const assets = pool.assets.map(a => a.toLowerCase())\n\n    if(!includeLPs && pool.assets.length > 1) return false\n    if(!includeSingleAssets && pool.assets.length === 1) return false\n\n    // Filter coins\n    const desiredCoinsArray = desiredCoins.trim().toLowerCase().split(' ')\n    if(desiredCoinsArray.length > 0) {\n      // Single asset\n      if(pool.assets.length === 1) {\n        if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\n      }\n      // Liquidity Pool\n      else {\n        if(strictFilter) {\n          if(!arrayHasAllOfArray(assets, desiredCoinsArray, exactMatch)) return false\n        }\n        else {\n          if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\n        }\n      }\n    }\n\n    // Filter platforms\n    if(desiredPlatformsArray.length > 0)\n      if(!textHasAnyOfArray(pool.platform.toUpperCase(), desiredPlatformsArray)) return false\n\n    return true\n  })\n}","import React from 'react'\nimport './YieldTable.scss'\n\nimport BootstrapTable from 'react-bootstrap-table-next'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\n\nimport {Image, OverlayTrigger, Popover} from 'react-bootstrap'\nimport {coinLogoUrl, poolLogoUrl} from '../utility/api'\nimport {calcDaily, formatFiat, formatInteger, formatPercentage} from '../utility/utils'\n\nconst poolFormatter = pool =>\n  <div className='pool-name'>\n    <span>{pool.logo ?\n            <Image src={poolLogoUrl(pool.logo)} /> :\n          pool.assets.length === 1 ?\n            <Image src={coinLogoUrl(pool.assets[0])} /> :\n              pool.assets.map(asset => <Image className='stacked-logo' key={asset} src={coinLogoUrl(asset)} />)\n        } {pool.name}</span>\n  </div>\n\nconst networkFormatter = network => network.toUpperCase()\n\nconst apyFormatter = totalApy => formatPercentage(totalApy)\n\nconst dailyFormatter = totalApy => formatPercentage(calcDaily(totalApy))\n\nconst tradingFeesFormatter = pool =>\npool.tradingApr ?\n  <OverlayTrigger\n    trigger={['focus']}\n    overlay={\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">APY Breakdown</Popover.Title>\n        <Popover.Content>\n          <Table striped bordered hover>\n            <tbody>\n            {pool.compoundingsPerYear && <tr>\n              <td>Compounds </td>\n              <td>{formatInteger(pool.compoundingsPerYear)}</td>\n            </tr>}\n            {pool.vaultApr && <tr>\n              <td>Vault APR</td>\n              <td>{formatPercentage(pool.vaultApr)}</td>\n            </tr>}\n            {pool.beefyPerformanceFee && <tr>\n              <td>Beefy Fee</td>\n              <td>{formatPercentage(pool.beefyPerformanceFee)}</td>\n            </tr>}\n            {pool.vaultApy && <tr>\n              <td>Vault APY</td>\n              <td>{formatPercentage(pool.vaultApy)}</td>\n            </tr>}\n            {pool.lpFee && <tr>\n              <td>LP Fee</td>\n              <td>{formatPercentage(pool.lpFee)}</td>\n            </tr>}\n            {pool.tradingApr && <tr>\n              <td>Trading APR</td>\n              <td>{formatPercentage(pool.tradingApr)}</td>\n            </tr>}\n            {pool.totalApy && <tr>\n              <td>Total APY</td>\n              <td>{formatPercentage(pool.totalApy)}</td>\n            </tr>}\n            </tbody>\n          </Table>\n        </Popover.Content>\n      </Popover>\n    }\n  >\n    <Button variant=\"success\">Included</Button>\n  </OverlayTrigger> : pool.assets.length === 1 ? '-' : \"Unknown\"\n\nconst tvlFormatter = tvl => formatFiat(tvl)\n\nconst columns = [\n  {\n    dataField: \"network\",\n    text: \"Network\",\n    sort: true,\n    formatter: networkFormatter\n  },\n\n  {\n    dataField: \"platform\",\n    text: \"Platform\",\n    sort: true\n  },\n  {\n    dataField: \"self\",\n    text: \"Pool\",\n    formatter: poolFormatter\n  },\n  {\n    dataField: \"totalApy\",\n    text: \"APY\",\n    sort: true,\n    formatter: apyFormatter\n  },\n  {\n    dataField: \"totalApy\",\n    text: \"Daily\",\n    sort: true,\n    formatter: dailyFormatter\n  },\n  {\n    dataField: \"self\",\n    text: \"Trading Fees\",\n    formatter: tradingFeesFormatter\n  },\n  {\n    dataField: \"tvl\",\n    text: \"TVL\",\n    sort: true,\n    formatter: tvlFormatter\n  }\n]\n\nconst YieldTable = ({yields}) =>\n  <BootstrapTable\n    keyField=\"key\"\n    data={yields}\n    columns={columns}\n    striped\n    hover\n    bootstrap4\n    defaultSorted={[{ dataField: 'totalApy', order: 'desc'}]}/>\n\nexport default YieldTable\n","import { createContext } from 'react'\n\nexport const emptyFilters = {\n  desiredCoins: '',\n  strictFilter: true,\n  exactMatch: false,\n  desiredPlatforms: '',\n  includeSingleAssets: true,\n  includeLPs: true\n}\n\nexport const defaultFilters = {\n  ...emptyFilters,\n  desiredCoins: 'usdc dai busd usdt',\n  desiredPlatforms: ''\n}\n\nconst FiltersContext = createContext(defaultFilters)\n\nexport default FiltersContext","import React, {useContext} from 'react'\n\nimport './Filters.scss'\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nimport {Form, ButtonGroup} from 'react-bootstrap'\nimport FiltersContext, {emptyFilters, defaultFilters} from '../contexts/filters.context'\n\nconst Filters = ({poolCount}) => {\n  const { filters, setFilters } = useContext(FiltersContext)\n\n  const handleChange = event => {\n    const { value, name } = event.target\n\n    setFilters({...filters, [name]: value })\n  }\n\n  const handleCheckBoxChange = event => {\n    const { checked, name } = event.target\n\n    setFilters({...filters, [name]: checked })\n  }\n\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\n\n  return (\n      <Jumbotron className='filters'>\n        <Form.Group>\n          <Form.Label>💎 Coins to Ride</Form.Label>\n          <Form.Control name='desiredCoins' value={desiredCoins} defaultValue={desiredCoins} size=\"sm\" type=\"text\" placeholder=\"e.g. usdc dai busd\" onChange={handleChange} />\n          <Form.Check>\n            <Form.Check.Input id='strictFilter' name='strictFilter' checked={strictFilter} defaultChecked={strictFilter} type=\"checkbox\" onChange={handleCheckBoxChange} />\n            <Form.Check.Label for='strictFilter'>Show ONLY these coins <span className='silent'>(USDC won't show USDC-DAI)</span></Form.Check.Label>\n          </Form.Check>\n          <Form.Check>\n            <Form.Check.Input id='exactMatch' name='exactMatch' checked={exactMatch} defaultChecked={exactMatch} type=\"checkbox\" onChange={handleCheckBoxChange} />\n            <Form.Check.Label for='exactMatch'>Exact Match <span className='silent'>(USDT won't match fUSDT)</span></Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n\n        <hr/>\n\n        <Form.Group>\n          <Form.Check>\n            <Form.Check.Input id='includeLPs' name='includeLPs' checked={includeLPs} defaultChecked={includeLPs} type=\"checkbox\" onChange={handleCheckBoxChange} />\n            <Form.Check.Label for='includeLPs'>Include Liquidity Pools</Form.Check.Label>\n          </Form.Check>\n          <Form.Check>\n            <Form.Check.Input id='includeSingleAssets' name='includeSingleAssets' checked={includeSingleAssets} defaultChecked={includeSingleAssets} type=\"checkbox\" onChange={handleCheckBoxChange} />\n            <Form.Check.Label for='includeSingleAssets'>Include Single Assets</Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n\n        <hr/>\n\n        <Form.Group>\n          <Form.Label>🏰 Platforms to Ride</Form.Label>\n          <Form.Control name='desiredPlatforms' value={desiredPlatforms} defaultValue={desiredPlatforms} size=\"sm\" type=\"text\" placeholder=\"e.g. cake aave sushi\" onChange={handleChange}/>\n        </Form.Group>\n\n        <hr/>\n\n        <span>{poolCount === 0 ? 'No pools found, please check your filters' : `Found ${poolCount} pool${poolCount === 1 ? '' : 's'} on 🐮 Beefy Finance.`}</span>\n        <ButtonGroup className='reset-filters-btn'>\n          <Button size='sm' variant='info' onClick={() => { setFilters(emptyFilters)}}>Clear Filters</Button>\n          <Button size='sm' variant='success' onClick={() => { setFilters(defaultFilters)}}>Default Filters</Button>\n        </ButtonGroup>\n      </Jumbotron>\n  )\n}\n\nexport default Filters\n","import {Nav, Navbar, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport './TopNavbar.scss'\nimport {useState} from 'react'\n\nconst TopNavbar = () => {\n  const [copied, setCopied] = useState(false)\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"\">\n          <img\n            alt=\"\"\n            src=\"/hat_short.png\"\n            className=\"navbar-image\"\n          />{'   '}\n          <span className='navbar-title'>yield.rodeo</span>\n        </Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip>{copied ? 'Copied!' : 'Click to copy!'}</Tooltip>}\n          >\n            <CopyToClipboard text={'0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C'}\n            onCopy={() => {\n              setCopied(true)\n              setTimeout(() => { setCopied(false) },1000)\n            }}>\n              <span>❤️ 0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C ❤️</span>\n            </CopyToClipboard>\n          </OverlayTrigger>\n        </Nav>\n      <Nav>\n        <Nav.Link className='navbar-contact' href={'https://naezith.com/?id=contact'} target=\"_blank\">Contact</Nav.Link>\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default TopNavbar","import React, {useEffect, useState} from 'react'\n\nimport Container from 'react-bootstrap/Container'\n\nimport './App.css'\nimport {getYieldsWithPrices} from './utility/api'\nimport YieldTable from './components/YieldTable'\nimport Filters from './components/Filters'\nimport FiltersContext, {defaultFilters} from './contexts/filters.context'\nimport TopNavbar from './components/TopNavbar'\nimport {filterPools} from './utility/utils'\n\nconst App = () => {\n  const [yields, setYields] = useState([])\n  const [filters, setFilters] = useState(defaultFilters)\n\n  useEffect(() => {\n    async function fetchData() {\n      // Get yields\n      const _yields = await getYieldsWithPrices()\n      setYields(_yields)\n    }\n    fetchData()\n  }, [])\n\n  const filteredYields = filterPools(yields, filters).map(pool => ({ ...pool, self: pool }))\n  return (\n    <div className='full-height'>\n      <Container className=\"p-3 App\">\n        <TopNavbar />\n      </Container>\n\n      <Container className=\"p-3 App\">\n        <FiltersContext.Provider value={{filters, setFilters}}>\n          <Filters poolCount={filteredYields.length}/>\n          <YieldTable yields={filteredYields} />\n        </FiltersContext.Provider>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootswatch-darkly-bootstrap.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const networks = ['avalanche', 'bsc', 'fantom', 'heco', 'polygon']\nconst network_ids = {\n  'bsc': 56,\n  'heco': 128,\n  'polygon': 137,\n  'fantom': 250,\n  'avalanche': 43114\n}\n\nconst getPools = async (network, type) => {\n  const result = await fetch(\n      type === 'stake' ?\n          `https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/stake/${network}_stake.js` :\n          `https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/${network}_pools.js`\n  )\n\n  let text = await result.text()\n  const beginningText = ' = ['\n  const endingText = '];'\n  text = text.substr(text.indexOf(beginningText) + beginningText.length - 1,\n      text.indexOf(endingText) - endingText.length)\n      .replaceAll('earnContractAbi: govPoolABI,', '')\n      .replaceAll(`, '4BELT'`, '')\n\n  const jsonObj = eval(text)\n\n  for(let pool of jsonObj) {\n    pool.network = network\n    pool.network_id = network_ids[network]\n    pool.key = network + '-' + pool.id\n    pool.type = type // stake or pool\n  }\n\n  return jsonObj\n}\n\nconst fetchAllPools = async () => {\n  let pools = {\n    'stake': {},\n    'pool': {},\n  }\n\n  let lengths = 0\n  await Promise.all(Object.keys(pools).map(async type => {\n    await Promise.all(networks.map(async network => {\n      pools[type][network] = await getPools(network, type)\n      lengths += pools[type][network].length\n    }))\n  }))\n\n\n  let allCombined = []\n\n  for(let type of Object.keys(pools))\n    for(let network of networks)\n      allCombined = allCombined.concat(pools[type][network])\n\n  return allCombined\n}\n\nexport const getYieldsWithPrices = async () => {\n  const yields = await fetchAllPools()\n  const prices = await (await fetch('https://api.beefy.finance/lps')).json()\n  const apyBreakdowns = await (await fetch('https://api.beefy.finance/apy/breakdown')).json()\n  const tvls = await (await fetch('https://api.beefy.finance/tvl')).json()\n\n  return yields.map(pool => {\n    const lpPrice = prices[pool.id]\n    const tvlToken = tvls[pool.network_id][pool.id]\n    const apyBreakdown = apyBreakdowns[pool.id]\n    return {\n      ...pool,\n      lpPrice: lpPrice,\n      tvl: tvlToken,\n      ...apyBreakdown\n    }\n  }).filter(pool => pool.tvl > 0 && pool.totalApy > 0.01)\n      .sort((a, b) => a.totalApy < b.totalApy ? 1 : -1)\n}\n\nexport const coinLogoUrl = ticker => 'https://trustwallet-assets-api.vercel.app/api/symbol/'  + ticker\nexport const poolLogoUrl = path => 'https://raw.githubusercontent.com/beefyfinance/beefy-app/master/src/images/'  + path"],"sourceRoot":""}