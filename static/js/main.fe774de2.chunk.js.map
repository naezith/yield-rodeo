{"version":3,"sources":["utility/helpers.js","utility/utils.js","utility/safetyScore.js","utility/api.js","components/YieldTable.js","contexts/filters.context.js","components/Filters.js","components/TopNavbar.js","contexts/inputs.context.js","components/Inputs.js","App.js","reportWebVitals.js","index.js"],"names":["textHasAnyOfArray","text","array","exact","t","indexOf","arrayHasAnyOfArray","assets","desired","d","a","numeral","require","calcDaily","apy","g","Math","pow","log10","isNaN","formatAny","num","format","formatFiat","toUpperCase","filterPools","pools","filters","desiredCoins","strictFilter","exactMatch","desiredPlatforms","desiredNetworks","includeSingleAssets","includeLPs","desiredPlatformsArray","trim","split","desiredNetworksArray","filter","pool","map","toLowerCase","length","desiredCoinsArray","exists","arrayHasAllOfArray","console","log","platformId","network","RISKS","COMPLEXITY_LOW","category","score","title","explanation","condition","COMPLEXITY_MID","COMPLEXITY_HIGH","BATTLE_TESTED","NEW_STRAT","EXPERIMENTAL_STRAT","IL_NONE","IL_LOW","IL_HIGH","ALGO_STABLE","LIQ_HIGH","LIQ_LOW","MCAP_LARGE","MCAP_MEDIUM","MCAP_SMALL","MCAP_MICRO","SUPPLY_CENTRALIZED","PLATFORM_ESTABLISHED","PLATFORM_NEW","NO_AUDIT","AUDIT","CONTRACTS_VERIFIED","CONTRACTS_UNVERIFIED","ADMIN_WITH_TIMELOCK","ADMIN_WITHOUT_TIMELOCK","CATEGORIES","safetyScore","arr","categories","c","forEach","r","idx","cat","push","warn","risk","min","reduce","acc","calcRisk","fetchPlus","url","options","retries","fetch","then","res","ok","Error","status","catch","error","message","getRandomParam","Date","getTime","networks","network_info","getNetworks","result","substr","replace","jsonObj","JSON","parse","Object","entries","key","value","id","processPools","chain","network_id","withdrawalFee","sort","name","depositFee","getYieldsWithPrices","json","yields","apyBreakdowns","tvls","tvlToken","apyBreakdown","risks","vaultUrl","beefyUrl","dailyApy","totalApy","monthlyApy","tvl","b","logosMap","window","localStorage","getItem","nextRefreshTime","now","githubRequestCount","rate","remaining","lastCommitSha","sha","repoPaths","tree","item","path","saLogosFolder","coinName","setItem","stringify","getLogos","coinLogoUrl","ticker","expandRow","renderer","Row","Col","href","target","rel","addLiquidityUrl","buyTokenUrl","prettyPercentage","formatApyAndAmount","amount","className","columns","dataField","formatter","_","logo","Image","src","roundedCircle","asset","totalApyAmount","monthlyApyAmount","dailyApyAmount","YieldTable","keyField","data","striped","hover","bootstrap4","defaultSorted","order","emptyFilters","defaultFilters","FiltersContext","createContext","Filters","loading","poolCount","useContext","setFilters","handleChange","event","handleCheckBoxChange","checked","Jumbotron","Form","Group","Label","Control","size","type","placeholder","onChange","Check","Input","htmlFor","Spinner","animation","role","ButtonGroup","Button","variant","onClick","TopNavbar","useState","copied","setCopied","Navbar","bg","Brand","alt","Nav","OverlayTrigger","placement","overlay","Tooltip","onCopy","setTimeout","Link","defaultInputs","capital","amountBefore","amountAfter","InputsContext","Inputs","inputs","setInputs","amountDifference","pnl","fieldsAreValid","sign","InputGroup","Prepend","Text","App","setYields","setLoading","useEffect","_yields","fetchData","finalYields","parseFloat","y","addApyValues","self","Container","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe774de2.chunk.js","sourcesContent":["export const textHasAnyOfArray = (text, array, exact=false) => {\r\n  for(const t of array) {\r\n    if(exact) {\r\n      if(text === t) return true\r\n    }\r\n    else if(text.indexOf(t) !== -1) return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport const arrayHasAnyOfArray = (assets, desired, exact=false) => {\r\n  for(const d of desired) {\r\n    if(exact) {\r\n      if(assets.indexOf(d) !== -1) return true\r\n    }\r\n    else {\r\n      for(const a of assets)\r\n        if(a.indexOf(d) !== -1) return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport const arrayHasAllOfArray = (assets, desired, exact=false) => {\r\n  for(const a of assets) {\r\n    if(exact) {\r\n      if(desired.indexOf(a) === -1) return false\r\n    }\r\n    else {\r\n      let exists = false\r\n      for(const d of desired) {\r\n        if(a.indexOf(d) !== -1) {\r\n          exists = true\r\n          break\r\n        }\r\n      }\r\n      if(!exists) return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fixJSON = badJSON => badJSON.replace(/(['\"])?([a-z0-9A-Z_]+)(['\"])?:/g, '\"$2\": ')\r\n","import {arrayHasAllOfArray, arrayHasAnyOfArray, textHasAnyOfArray} from './helpers'\r\n\r\nconst numeral = require('numeral')\r\n\r\nexport const calcDaily = apy => {\r\n  const g = Math.pow(10, Math.log10(apy + 1) / 365) - 1;\r\n\r\n  if (isNaN(g)) {\r\n    return 0;\r\n  }\r\n\r\n  return g;\r\n}\r\n\r\nexport const calcMonthly = apy => {\r\n  return apy / 12\r\n}\r\n\r\n\r\nexport const formatAny = (num, format) => {\r\n  const text = numeral(num).format(format)\r\n  return text.indexOf('NaN') !== -1 ? '' : text\r\n}\r\n\r\nexport const formatPercentage = (num) => formatAny(num, '0.00a%').toUpperCase()\r\nexport const formatInteger = (num) => formatAny(num, '0,0').toUpperCase()\r\nexport const formatFiat = (num) => formatAny(num, '$0,0.0a').toUpperCase()\r\n\r\nexport const filterPools = (pools, filters) => {\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, desiredNetworks, includeSingleAssets, includeLPs } = filters\r\n  const desiredPlatformsArray = desiredPlatforms.trim().toUpperCase().split(' ')\r\n  const desiredNetworksArray = desiredNetworks.trim().toUpperCase().split(' ')\r\n\r\n  return pools.filter(pool => {\r\n    const assets = pool.assets.map(a => a.toLowerCase())\r\n\r\n    if(!includeLPs && pool.assets.length > 1) return false\r\n    if(!includeSingleAssets && pool.assets.length === 1) return false\r\n\r\n    // Filter coins\r\n    const desiredCoinsArray = desiredCoins.trim().toLowerCase().split(' ')\r\n    if(desiredCoinsArray.length > 0) {\r\n      // Single asset\r\n      if(pool.assets.length === 1) {\r\n        if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n      }\r\n      // Liquidity Pool\r\n      else {\r\n        if(strictFilter) {\r\n          if(!arrayHasAllOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n        else {\r\n          if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n      }\r\n    }\r\n\r\n    // Filter platforms\r\n    if(desiredPlatformsArray.length > 0) {\r\n      console.log(pool)\r\n      if(!textHasAnyOfArray(pool.platformId.toUpperCase(), desiredPlatformsArray)) return false\r\n    }\r\n    // Filter networks\r\n    if(desiredNetworksArray.length > 0)\r\n      if(!textHasAnyOfArray(pool.network.toUpperCase(), desiredNetworksArray)) return false\r\n\r\n    return true\r\n  })\r\n}\r\n\r\nexport const addApyValues = (yields, capital) => {\r\n  capital = capital ? parseFloat(capital) : 0\r\n  if(capital === 0) return yields\r\n\r\n  return yields.map(y => (\r\n    {\r\n      ...y,\r\n      totalApyAmount: numeral(y.totalApy).value() * capital,\r\n      dailyApyAmount: numeral(y.dailyApy).value() * capital,\r\n      monthlyApyAmount: numeral(y.monthlyApy).value() * capital,\r\n    }\r\n  ))\r\n}","// https://github.com/beefyfinance/beefy-landing-v2/blob/main/src/helpers/safetyScore.js\n// https://github.com/beefyfinance/beefy-landing-v2/blob/main/src/config/risk.js\nexport const MAX_SCORE = 10;\n\nexport const RISKS = {\n  COMPLEXITY_LOW: {\n    category: 'Categry-Beefy',\n    score: 0,\n    title: 'Complexity-Low-Titl',\n    explanation: 'Complexity-Low-Expl',\n    condition: 'Complexity-Low-Cond',\n  },\n\n  COMPLEXITY_MID: {\n    category: 'Categry-Beefy',\n    score: 0.3,\n    title: 'Complexity-Mid-Titl',\n    explanation: 'Complexity-Mid-Expl',\n    condition: 'Complexity-Mid-Cond',\n  },\n\n  COMPLEXITY_HIGH: {\n    category: 'Categry-Beefy',\n    score: 0.5,\n    title: 'Complexity-Hi-Titl',\n    explanation: 'Complexity-Hi-Expl',\n    condition: 'Complexity-Hi-Cond',\n  },\n\n  BATTLE_TESTED: {\n    category: 'Categry-Beefy',\n    score: 0,\n    title: 'Testd-Battle-Titl',\n    explanation: 'Testd-Battle-Expl',\n    condition: 'Testd-Battle-Cond',\n  },\n\n  NEW_STRAT: {\n    category: 'Categry-Beefy',\n    score: 0.3,\n    title: 'Testd-New-Titl',\n    explanation: 'Testd-New-Expl',\n    condition: 'Testd-New-Cond',\n  },\n\n  EXPERIMENTAL_STRAT: {\n    category: 'Categry-Beefy',\n    score: 0.7,\n    title: 'Testd-Experimtl-Titl',\n    explanation: 'Testd-Experimtl-Expl',\n    condition: 'Testd-Experimtl-Cond',\n  },\n\n  IL_NONE: {\n    category: 'Categry-Asset',\n    score: 0,\n    title: 'IL-None-Titl',\n    explanation: 'IL-None-Expl',\n    condition: 'IL-None-Cond',\n  },\n\n  IL_LOW: {\n    category: 'Categry-Asset',\n    score: 0.2,\n    title: 'IL-Low-Titl',\n    explanation: 'IL-Low-Expl',\n    condition: 'IL-Low-Cond',\n  },\n\n  IL_HIGH: {\n    category: 'Categry-Asset',\n    score: 0.5,\n    title: 'IL-High-Titl',\n    explanation: 'IL-High-Expl',\n    condition: 'IL-High-Cond',\n  },\n\n  ALGO_STABLE: {\n    category: 'Categry-Asset',\n    score: 0.5,\n    title: 'IL-AlgoStable-Titl',\n    explanation: 'IL-AlgoStable-Expl',\n    condition: 'IL-AlgoStable-Cond',\n  },\n\n  LIQ_HIGH: {\n    category: 'Categry-Asset',\n    score: 0,\n    title: 'Liquidt-High-Titl',\n    explanation: 'Liquidt-High-Expl',\n    condition: 'Liquidt-High-Cond',\n  },\n\n  LIQ_LOW: {\n    category: 'Categry-Asset',\n    score: 0.3,\n    title: 'Liquidt-Low-Titl',\n    explanation: 'Liquidt-Low-Expl',\n    condition: 'Liquidt-Low-Cond',\n  },\n\n  MCAP_LARGE: {\n    category: 'Categry-Asset',\n    score: 0,\n    title: 'MktCap-Large-Titl',\n    explanation: 'MktCap-Large-Expl',\n    condition: 'MktCap-Large-Cond',\n  },\n\n  MCAP_MEDIUM: {\n    category: 'Categry-Asset',\n    score: 0.1,\n    title: 'MktCap-Mid-Titl',\n    explanation: 'MktCap-Mid-Expl',\n    condition: 'MktCap-Mid-Cond',\n  },\n\n  MCAP_SMALL: {\n    category: 'Categry-Asset',\n    score: 0.3,\n    title: 'MktCap-Small-Titl',\n    explanation: 'MktCap-Small-Expl',\n    condition: 'MktCap-Small-Cond',\n  },\n\n  MCAP_MICRO: {\n    category: 'Categry-Asset',\n    score: 0.5,\n    title: 'MktCap-Micro-Titl',\n    explanation: 'MktCap-Micro-Expl',\n    condition: 'MktCap-Micro-Cond',\n  },\n\n  SUPPLY_CENTRALIZED: {\n    category: 'Categry-Asset',\n    score: 1,\n    title: 'Concentrated-Titl',\n    explanation: 'Concentrated-Expl',\n    condition: 'Concentrated-Cond',\n  },\n\n  PLATFORM_ESTABLISHED: {\n    category: 'Categry-Platform',\n    score: 0,\n    title: 'Platfrm-Establshd-Titl',\n    explanation: 'Platfrm-Establshd-Expl',\n    condition: 'Platfrm-Establshd-Cond',\n  },\n\n  PLATFORM_NEW: {\n    category: 'Categry-Platform',\n    score: 0.5,\n    title: 'Platfrm-New-Titl',\n    explanation: 'Platfrm-New-Expl',\n    condition: 'Platfrm-New-Cond',\n  },\n\n  NO_AUDIT: {\n    category: 'Categry-Platform',\n    score: 0.3,\n    title: 'Platfrm-AuditNo-Titl',\n    explanation: 'Platfrm-AuditNo-Expl',\n    condition: 'Platfrm-AuditNo-Cond',\n  },\n\n  AUDIT: {\n    category: 'Categry-Platform',\n    score: 0,\n    title: 'Platfrm-Audit-Titl',\n    explanation: 'Platfrm-Audit-Expl',\n    condition: 'Platfrm-Audit-Cond',\n  },\n\n  CONTRACTS_VERIFIED: {\n    category: 'Categry-Platform',\n    score: 0,\n    title: 'Platfrm-Verified-Titl',\n    explanation: 'Platfrm-Verified-Expl',\n    condition: 'Platfrm-Verified-Cond',\n  },\n\n  CONTRACTS_UNVERIFIED: {\n    category: 'Categry-Platform',\n    score: 1,\n    title: 'Platfrm-VerifiedNo-Titl',\n    explanation: 'Platfrm-VerifiedNo-Expl',\n    condition: 'Platfrm-VerifiedNo-Cond',\n  },\n\n  ADMIN_WITH_TIMELOCK: {\n    category: 'Categry-Platform',\n    score: 0,\n    title: 'Platfrm-Timelock-Titl',\n    explanation: 'Platfrm-Timelock-Expl',\n    condition: 'Platfrm-Timelock-Cond',\n  },\n\n  ADMIN_WITHOUT_TIMELOCK: {\n    category: 'Categry-Platform',\n    score: 0.5,\n    title: 'Platfrm-TimelockNo-Titl',\n    explanation: 'Platfrm-TimelockNo-Expl',\n    condition: 'Platfrm-TimelockNo-Cond',\n  },\n};\n\nexport const CATEGORIES = {\n  'Categry-Beefy': 0.2,\n  'Categry-Asset': 0.2,\n  'Categry-Platform': 0.6,\n};\n\nconst calcRisk = arr => {\n  const categories = {};\n  for (const c in CATEGORIES) {\n    categories[c] = [];\n  }\n\n  // reverse lookup\n  arr.forEach((r, idx) => {\n    if (!(r in RISKS)) {\n      //console.warn('unknown risk', r);\n      return;\n    }\n\n    const cat = RISKS[r].category;\n    if (!(cat in CATEGORIES)) {\n      console.warn('unknown category', cat);\n      return;\n    }\n\n    categories[cat].push(r);\n  });\n\n  // reduce & clamp\n  let risk = 0;\n  for (const c in CATEGORIES) {\n    const w = CATEGORIES[c];\n    risk +=\n      w *\n      Math.min(\n        1,\n        categories[c].reduce((acc, r) => acc + RISKS[r].score, 0)\n      );\n  }\n\n  return risk;\n};\n\nconst safetyScore = arr => {\n  if (!arr || arr.length === 0) return null;\n\n  return (MAX_SCORE * (1 - calcRisk(arr)));\n};\n\nexport default safetyScore;","import {calcDaily, calcMonthly} from './utils'\r\nimport safetyScore from './safetyScore'\r\nimport { fixJSON } from './helpers'\r\n\r\nconst fetchPlus = (url, options = {}, retries = 150) =>\r\n  fetch(url, options)\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res\r\n      }\r\n      if (retries > 0) {\r\n        return fetchPlus(url, options, retries - 1)\r\n      }\r\n      throw new Error(res.status)\r\n    })\r\n    .catch(error => console.error(error.message))\r\n\r\nconst getRandomParam = () => \"?p=\" + (new Date()).getTime()\r\n\r\nlet networks = []\r\nlet network_info = {}\r\n\r\nconst getNetworks = async () => {\r\n  const result = await fetch(\r\n    `https://raw.githubusercontent.com/beefyfinance/beefy-api/master/packages/address-book/types/chainid.ts` + getRandomParam())\r\n\r\n  let text = await result.text()\r\n  text = text.substr(text.indexOf(\"{\"), text.indexOf(\"}\") + 1)\r\n        .replace(/ = /g, ': ')\r\n        .replace(',\\n}','\\n}')\r\n\r\n  const jsonObj = JSON.parse(fixJSON(text))\r\n\r\n  networks = []\r\n  network_info = {}\r\n  for (const [key, value] of Object.entries(jsonObj)) {\r\n    networks.push(key)\r\n    network_info[key] = { id: value }\r\n  }\r\n\r\n  return { networks, network_info }\r\n}\r\n\r\nconst processPools = pools => {\r\n  for(let pool of pools) {\r\n    pool.network = pool.chain\r\n    pool.network_id = network_info[pool.chain].id\r\n    pool.key = pool.network + '-' + pool.id\r\n\r\n    // Fix withdrawalFee formatting, API bad formatting\r\n    if(pool.withdrawalFee && pool.withdrawalFee.length > 0) {\r\n      if(pool.withdrawalFee === \"0.0%\") {\r\n        pool.withdrawalFee = \"0%\"\r\n      }\r\n      if(pool.withdrawalFee[0] === '.') {\r\n        pool.withdrawalFee = \"0\" + pool.withdrawalFee\r\n      }\r\n    }\r\n\r\n\r\n    if(pool.assets) {\r\n      pool.assets = pool.assets.sort()\r\n      pool.name = ''\r\n      for(let a of pool.assets) {\r\n        if(pool.name !== '') pool.name += ' · '\r\n        pool.name += a\r\n      }\r\n    }\r\n\r\n    // Fix depositFee formatting, API bad formatting\r\n    if(pool.depositFee && pool.depositFee.length > 0) {\r\n      if(pool.depositFee[0] === '.') {\r\n        pool.depositFee = \"0\" + pool.depositFee\r\n      }\r\n      pool.depositFee = pool.depositFee.replace(\"<\", \"\")\r\n    }\r\n  }\r\n\r\n  return pools\r\n}\r\n\r\nexport const getYieldsWithPrices = async () => {\r\n  await getNetworks()\r\n  const yields = processPools(await (await fetchPlus('https://api.beefy.finance/vaults' + getRandomParam())).json())\r\n  // const prices = await (await fetchPlus('https://api.beefy.finance/lps' + getRandomParam())).json()\r\n  const apyBreakdowns = await (await fetchPlus('https://api.beefy.finance/apy/breakdown' + getRandomParam())).json()\r\n  const tvls = await (await fetchPlus('https://api.beefy.finance/tvl' + getRandomParam())).json()\r\n\r\n  return yields.map(pool => {\r\n    // const lpPrice = prices[pool.id]\r\n    const tvlToken = tvls[pool.network_id] ? tvls[pool.network_id][pool.id] : ''\r\n    const apyBreakdown = apyBreakdowns[pool.id]\r\n    const score = safetyScore(pool.risks)\r\n    return {\r\n      vaultUrl: beefyUrl(pool.network, pool.id),  \r\n      withdrawalFee: '0.1%',\r\n      depositFee: '0%',\r\n      dailyApy: apyBreakdown && calcDaily(apyBreakdown.totalApy),\r\n      monthlyApy: apyBreakdown && calcMonthly(apyBreakdown.totalApy),\r\n      ...pool,\r\n      // lpPrice: lpPrice,\r\n      tvl: tvlToken,\r\n      ...apyBreakdown,\r\n      platformId: pool.platformId.toUpperCase(),\r\n      safetyScore: score === null ? 9.991337 : score,\r\n    }\r\n  }).filter(pool => pool.tvl > 0 && pool.totalApy > 0.0001)\r\n      .sort((a, b) => a.totalApy < b.totalApy ? 1 : -1)\r\n}\r\n\r\n// Get coin logo formats\r\nlet logosMap = JSON.parse(window.localStorage.getItem('logosMap'))\r\n\r\nconst getLogos = async () => {\r\n  if(!logosMap || logosMap.nextRefreshTime <= Date.now()) {\r\n    logosMap = {}\r\n    const githubRequestCount = 2\r\n    let canFetch = (await (await fetch('https://api.github.com/rate_limit')).json()).rate.remaining >= githubRequestCount \r\n    if(canFetch) {\r\n      let lastCommitSha = (await (await fetch('https://api.github.com/repos/beefyfinance/beefy-app/commits/master')).json()).sha\r\n      let repoPaths = await (await fetch(`https://api.github.com/repos/beefyfinance/beefy-app/git/trees/${lastCommitSha}?recursive=1`)).json()\r\n      \r\n      // Map paths to coins\r\n      for(let item of repoPaths.tree) {\r\n        if(item.path === 'src/images/single-assets') {\r\n          let saLogosFolder = await (await fetch(item.url)).json()\r\n\r\n          for(let item of saLogosFolder.tree) {\r\n            let coinName = item.path.split('.')[0]\r\n            logosMap[coinName] = item.path\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // Save\r\n      logosMap.nextRefreshTime = Date.now() + 15 * 60000\r\n      window.localStorage.setItem('logosMap', JSON.stringify(logosMap))\r\n    }\r\n  }\r\n}\r\ngetLogos()\r\n\r\nexport const coinLogoUrl = (ticker) => 'https://raw.githubusercontent.com/beefyfinance/beefy-app/master/src/images/single-assets/'  + logosMap[ticker]\r\nexport const poolLogoUrl = path => 'https://raw.githubusercontent.com/beefyfinance/beefy-app/master/src/images/'  + path\r\n// export const addressUrl = (network, address) => network_info[network].explorer + 'address/' + address\r\nexport const beefyUrl = (network, id) => 'https://beta.beefy.finance/#/'+ network + '/vault/' + id","import React from 'react'\r\nimport numeral from 'numeral'\r\nimport './YieldTable.scss'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\n// import Button from 'react-bootstrap/Button'\r\n// import Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport {Image/*, OverlayTrigger, Popover*/} from 'react-bootstrap'\r\nimport {/*addressUrl, */coinLogoUrl, poolLogoUrl} from '../utility/api'\r\nimport {formatFiat, /*formatInteger,*/ formatPercentage} from '../utility/utils'\r\n\r\nconst expandRow = {\r\n  renderer: pool => (\r\n    <Row>\r\n    <Col>\r\n      <Row>\r\n        { pool.vaultUrl &&\r\n          <Col><b>{<a href={pool.vaultUrl} target=\"_blank\" rel=\"noreferrer\">Deposit on Beefy / View APY Chart</a>}</b></Col>}\r\n\r\n      </Row>\r\n      <Row>\r\n        { (pool.addLiquidityUrl || pool.buyTokenUrl) &&\r\n          <Col>{pool.addLiquidityUrl && <a href={pool.addLiquidityUrl} target=\"_blank\" rel=\"noreferrer\">Add Liquidity</a>} {(pool.addLiquidityUrl && pool.buyTokenUrl) && ' | '} {pool.buyTokenUrl && <a href={pool.buyTokenUrl} target=\"_blank\" rel=\"noreferrer\">Buy Token</a>}</Col>}\r\n        {/*pool.tokenAddress &&\r\n          <Col><a href={addressUrl(pool.network, pool.tokenAddress)} target=\"_blank\" rel=\"noreferrer\">{pool.tokenAddress}</a></Col>*/}\r\n      </Row>\r\n    </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst poolFormatter = (_, {logo, assets, name}) =>\r\n  <div className='pool-name'>\r\n    <span>{logo ?\r\n            <Image src={poolLogoUrl(logo)} /> :\r\n          assets.length === 1 ?\r\n            <Image src={coinLogoUrl(assets[0])} roundedCircle /> :\r\n              assets.map(asset => <Image className='stacked-logo' key={asset} src={coinLogoUrl(asset)} roundedCircle />)\r\n        } {name}</span>\r\n  </div>\r\n\r\nconst networkFormatter = network => network.toUpperCase()\r\n\r\n\r\nconst prettyPercentage = apy => {\r\n  const text = formatPercentage(apy)\r\n  return text === '' ? '🔥' : text\r\n}\r\n\r\nconst formatApyAndAmount = (apy, amount) =>\r\n  <>\r\n    <span>{prettyPercentage(apy)}</span>\r\n    {amount && formatFiat(amount) !== '' ? <span className={'text-success apy-fiat-text'}>{formatFiat(amount)}</span> : ''}\r\n  </>\r\n\r\nconst apyFormatter = (totalApy, {totalApyAmount}) => formatApyAndAmount(totalApy, totalApyAmount)\r\nconst monthlyFormatter = (monthlyApy, {monthlyApyAmount}) => formatApyAndAmount(monthlyApy, monthlyApyAmount)\r\nconst dailyFormatter = (dailyApy, {dailyApyAmount}) => formatApyAndAmount(dailyApy, dailyApyAmount)\r\n\r\nconst withdrawalFeeFormatter = (withdrawalFee, {dailyApy}) => <span className={\r\n    numeral(withdrawalFee).value() === 0 ? '' :\r\n    numeral(withdrawalFee).value() > dailyApy ? 'text-danger' : ''}>{(withdrawalFee === \"0%\" ? '-' : withdrawalFee)}</span>\r\n\r\nconst depositFeeFormatter = (depositFee, {dailyApy}) => <span className={\r\n    numeral(depositFee).value() === 0 ? '' :\r\n    numeral(depositFee).value() > dailyApy ? 'text-danger' : ''}>{(depositFee === \"0%\" ? '-' : depositFee)}</span>\r\n\r\nconst safetyScoreFormatter = (safetyScore) => <span className={\r\n    numeral(safetyScore).value() === 9.991337 ? 'text-warning' : \r\n    numeral(safetyScore).value() === 10 ? 'text-success' : \r\n    numeral(safetyScore).value() <= 8 ? 'text-danger' : ''}>{(safetyScore === 9.991337 ? '?' : safetyScore === 10 ? '✓' : numeral(safetyScore).format(\"0.0\"))}</span>\r\n/*\r\nconst tradingFeesFormatter = (_, pool) =>\r\npool.tradingApr ?\r\n  <OverlayTrigger\r\n    overlay={\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">APY Breakdown</Popover.Title>\r\n        <Popover.Content>\r\n          <Table striped bordered hover>\r\n            <tbody>\r\n            {pool.compoundingsPerYear && <tr>\r\n              <td>Compounds</td>\r\n              <td>{formatInteger(pool.compoundingsPerYear)}</td>\r\n            </tr>}\r\n            {pool.vaultApr && <tr>\r\n              <td>Vault APR</td>\r\n              <td>{prettyPercentage(pool.vaultApr)}</td>\r\n            </tr>}\r\n            {pool.beefyPerformanceFee && <tr>\r\n              <td>Beefy Fee</td>\r\n              <td>{prettyPercentage(pool.beefyPerformanceFee)}</td>\r\n            </tr>}\r\n            {pool.callFee && <tr>\r\n              <td>Call Fee</td>\r\n              <td>{prettyPercentage(pool.callFee/100)}</td>\r\n            </tr>}\r\n            {pool.vaultApy && <tr>\r\n              <td>Vault APY</td>\r\n              <td>{prettyPercentage(pool.vaultApy)}</td>\r\n            </tr>}\r\n            {pool.lpFee && <tr>\r\n              <td>LP Fee</td>\r\n              <td>{prettyPercentage(pool.lpFee)}</td>\r\n            </tr>}\r\n            {pool.tradingApr && <tr>\r\n              <td>Trading APR</td>\r\n              <td>{prettyPercentage(pool.tradingApr)}</td>\r\n            </tr>}\r\n            {pool.totalApy && <tr>\r\n              <td>Total APY</td>\r\n              <td>{prettyPercentage(pool.totalApy)}</td>\r\n            </tr>}\r\n            </tbody>\r\n          </Table>\r\n        </Popover.Content>\r\n      </Popover>\r\n    }\r\n  >\r\n    <Button variant=\"success\">Included</Button>\r\n  </OverlayTrigger> : pool.assets.length === 1 ? '-' : \"Unknown\"\r\n*/\r\n\r\nconst tvlFormatter = tvl => <span className={\r\n    numeral(tvl).value() >= 1000000 ? 'text-success' : \r\n    numeral(tvl).value() < 100000 ? 'text-danger' : ''}>{formatFiat(tvl)}</span>\r\n\r\nconst columns = [\r\n  {\r\n    dataField: \"network\",\r\n    text: \"Network\",\r\n    sort: true,\r\n    formatter: networkFormatter\r\n  },\r\n\r\n  {\r\n    dataField: \"platformId\",\r\n    text: \"Platform\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Pool\",\r\n    formatter: poolFormatter\r\n  },\r\n  {\r\n    dataField: \"totalApy\",\r\n    text: \"APY\",\r\n    sort: true,\r\n    formatter: apyFormatter\r\n  },\r\n  {\r\n    dataField: \"monthlyApy\",\r\n    text: \"Monthly\",\r\n    sort: true,\r\n    formatter: monthlyFormatter\r\n  },\r\n  {\r\n    dataField: \"dailyApy\",\r\n    text: \"Daily\",\r\n    sort: true,\r\n    formatter: dailyFormatter\r\n  },\r\n  {\r\n    dataField: \"withdrawalFee\",\r\n    text: \"Withdraw\",\r\n    sort: true,\r\n    formatter: withdrawalFeeFormatter\r\n  },\r\n  {\r\n    dataField: \"depositFee\",\r\n    text: \"Deposit\",\r\n    sort: true,\r\n    formatter: depositFeeFormatter\r\n  },\r\n  // {\r\n  //   dataField: \"tradingApr\",\r\n  //   text: \"Trading Fees\",\r\n  //   formatter: tradingFeesFormatter\r\n  // },\r\n  {\r\n    dataField: \"safetyScore\",\r\n    text: \"Safe\",\r\n    sort: true,\r\n    formatter: safetyScoreFormatter\r\n  },\r\n  {\r\n    dataField: \"tvl\",\r\n    text: \"TVL\",\r\n    sort: true,\r\n    formatter: tvlFormatter\r\n  },\r\n]\r\n\r\nconst YieldTable = ({yields}) =>\r\n  <BootstrapTable\r\n    keyField=\"key\"\r\n    data={yields}\r\n    columns={columns}\r\n    expandRow={expandRow}\r\n    striped\r\n    hover\r\n    bootstrap4\r\n    defaultSorted={[{ dataField: 'totalApy', order: 'desc'}]}/>\r\n\r\nexport default YieldTable\r\n","import { createContext } from 'react'\r\n\r\nexport const emptyFilters = {\r\n  desiredCoins: '',\r\n  strictFilter: true,\r\n  exactMatch: false,\r\n  desiredPlatforms: '',\r\n  desiredNetworks: '',\r\n  includeSingleAssets: true,\r\n  includeLPs: true\r\n}\r\n\r\nexport const defaultFilters = {\r\n  ...emptyFilters,\r\n  desiredCoins: 'usdc dai busd usdt',\r\n}\r\n\r\nconst FiltersContext = createContext(defaultFilters)\r\n\r\nexport default FiltersContext","import React, {useContext} from 'react'\r\n\r\nimport './Filters.scss'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport {Form, ButtonGroup, Spinner} from 'react-bootstrap'\r\nimport FiltersContext, {emptyFilters, defaultFilters} from '../contexts/filters.context'\r\n\r\nconst Filters = ({loading, poolCount}) => {\r\n  const { filters, setFilters } = useContext(FiltersContext)\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target\r\n\r\n    setFilters({...filters, [name]: value })\r\n  }\r\n\r\n  const handleCheckBoxChange = event => {\r\n    const { checked, name } = event.target\r\n\r\n    setFilters({...filters, [name]: checked })\r\n  }\r\n\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, desiredNetworks, includeSingleAssets, includeLPs } = filters\r\n\r\n  return (\r\n      <Jumbotron className='filters'>\r\n        <Form.Group>\r\n          <Form.Label>💎 Coins to Ride</Form.Label>\r\n          <Form.Control name='desiredCoins' value={desiredCoins} size=\"sm\" type=\"text\" placeholder=\"e.g. usdc dai busd\" onChange={handleChange} />\r\n          <Form.Check>\r\n            <Form.Check.Input id='strictFilter' name='strictFilter' checked={strictFilter} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label htmlFor='strictFilter'>Show ONLY these coins <span className='silent'>(USDC won't show USDC-DAI)</span></Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='exactMatch' name='exactMatch' checked={exactMatch} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label htmlFor='exactMatch'>Exact Match <span className='silent'>(USDT won't match fUSDT)</span></Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeLPs' name='includeLPs' checked={includeLPs}  type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label htmlFor='includeLPs'>Include Liquidity Pools</Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeSingleAssets' name='includeSingleAssets' checked={includeSingleAssets} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label htmlFor='includeSingleAssets'>Include Single Assets</Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Label>🏰 Platforms to Ride</Form.Label>\r\n          <Form.Control name='desiredPlatforms' value={desiredPlatforms} size=\"sm\" type=\"text\" placeholder=\"e.g. cake aave sushi\" onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Label>🌐 Networks to Ride</Form.Label>\r\n          <Form.Control name='desiredNetworks' value={desiredNetworks} size=\"sm\" type=\"text\" placeholder=\"e.g. bsc polygon\" onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <span>{loading ? <>Loading pools... <Spinner size='sm' animation=\"border\" role=\"status\"/></> :\r\n          poolCount === 0 ? 'No pools found, please check your filters' :\r\n            `Found ${poolCount} pool${poolCount === 1 ? '' : 's'} on 🐮 Beefy Finance.`}</span>\r\n        <ButtonGroup className='reset-filters-btn'>\r\n          <Button size='sm' variant='info' onClick={() => { setFilters(emptyFilters)}}>Clear Filters</Button>\r\n          <Button size='sm' variant='success' onClick={() => { setFilters(defaultFilters)}}>Default Filters</Button>\r\n        </ButtonGroup>\r\n      </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import {Nav, Navbar, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport './TopNavbar.scss'\r\nimport {useState} from 'react'\r\n\r\nconst TopNavbar = () => {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/hat_short.png\"\r\n            className=\"navbar-image\"\r\n          />{'   '}\r\n          <span className='navbar-title'>yield.rodeo</span>\r\n        </Navbar.Brand>\r\n        <Nav className=\"ml-auto\">\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={<Tooltip>{copied ? 'Copied!' : 'Click to copy!'}</Tooltip>}\r\n          >\r\n            <CopyToClipboard text={'0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C'}\r\n            onCopy={() => {\r\n              setCopied(true)\r\n              setTimeout(() => { setCopied(false) },1000)\r\n            }}>\r\n              <span>❤️ Donate: 0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C ❤️</span>\r\n            </CopyToClipboard>\r\n          </OverlayTrigger>\r\n        </Nav>\r\n      <Nav>\r\n        <Nav.Link className='navbar-contact' href={'https://naezith.com/?id=contact'} target=\"_blank\" rel=\"noreferrer\">Contact</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar","import { createContext } from 'react'\r\n\r\nexport const emptyInputs = {\r\n  capital: 100000,\r\n  amountBefore: 100000,\r\n  amountAfter: 125000\r\n}\r\n\r\nexport const defaultInputs = {\r\n  ...emptyInputs\r\n}\r\n\r\nconst InputsContext = createContext(defaultInputs)\r\n\r\nexport default InputsContext","import React, {useContext} from 'react'\r\n\r\nimport './Filters.scss'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport {Form, InputGroup} from 'react-bootstrap'\r\nimport InputsContext from '../contexts/inputs.context'\r\nimport {formatAny} from '../utility/utils'\r\n\r\nconst Inputs = () => {\r\n  const { inputs, setInputs } = useContext(InputsContext)\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target\r\n\r\n    setInputs({...inputs, [name]: value })\r\n  }\r\n\r\n  const { capital, amountBefore, amountAfter } = inputs\r\n\r\n  const amountDifference = amountAfter - amountBefore\r\n  const pnl = amountDifference / amountBefore\r\n  const fieldsAreValid = amountAfter !== '' && amountBefore !== ''\r\n  const sign = pnl > 0 ? '+' : ''\r\n\r\n  return (\r\n    <Jumbotron className='filters'>\r\n      <Form.Label>💰 Capital</Form.Label>\r\n      <InputGroup className=\"mb-3\" size=\"sm\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>$</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control name='capital' value={capital} type=\"number\" placeholder=\"e.g. 1000\" onChange={handleChange} />\r\n      </InputGroup>\r\n\r\n      <hr/>\r\n\r\n      <Form.Label>🖩 Profit % Calculator </Form.Label>\r\n      <InputGroup className=\"mb-3\" size=\"sm\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>Before</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control name='amountBefore' value={amountBefore} type=\"number\" placeholder=\"e.g. 1000\" onChange={handleChange} />\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>After</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <Form.Control name='amountAfter' value={amountAfter} type=\"number\" placeholder=\"e.g. 1000\" onChange={handleChange} />\r\n      </InputGroup>\r\n      <Form.Label className={ !fieldsAreValid || pnl > 0 ? 'text-success' : pnl < 0 ? 'text-danger' : ''}>\r\n        { fieldsAreValid ? 'P&L: ' + sign + formatAny(amountDifference, '0,0.[000]') + ' (' + sign + formatAny(pnl, '0.[000]%') + ')' :\r\n          'Please fill the fields'}\r\n      </Form.Label>\r\n    </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Inputs\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport './App.css'\r\nimport {getYieldsWithPrices} from './utility/api'\r\nimport YieldTable from './components/YieldTable'\r\nimport Filters from './components/Filters'\r\nimport FiltersContext, {defaultFilters} from './contexts/filters.context'\r\nimport TopNavbar from './components/TopNavbar'\r\nimport {addApyValues, filterPools} from './utility/utils'\r\nimport {Col, Spinner} from 'react-bootstrap'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Inputs from './components/Inputs'\r\nimport InputsContext, {defaultInputs} from './contexts/inputs.context'\r\n\r\nconst App = () => {\r\n  const [yields, setYields] = useState([])\r\n  const [inputs, setInputs] = useState(defaultInputs)\r\n  const [filters, setFilters] = useState(defaultFilters)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // Get yields\r\n      setLoading(true)\r\n      const _yields = await getYieldsWithPrices()\r\n      setLoading(false)\r\n      setYields(_yields)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const finalYields = addApyValues(filterPools(yields, filters).map(pool => ({ ...pool, self: pool })), inputs.capital)\r\n  return (\r\n    <div className='full-height'>\r\n      <Container className=\"p-3 App\">\r\n        <Row>\r\n          <Col>\r\n          <TopNavbar />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <InputsContext.Provider value={{inputs, setInputs}}>\r\n      <FiltersContext.Provider value={{filters, setFilters}}>\r\n      <Container className=\"p-3 App\">\r\n        <Row>\r\n          <Col>\r\n            <Filters loading={loading} poolCount={finalYields.length}/>\r\n          </Col>\r\n          <Col>\r\n            <Inputs />\r\n          </Col>\r\n        </Row>\r\n          { loading ?\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner> :\r\n\r\n            <Row>\r\n              <Col>\r\n                <YieldTable yields={finalYields} />\r\n              </Col>\r\n            </Row>\r\n          }\r\n      </Container>\r\n      </FiltersContext.Provider>\r\n      </InputsContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootswatch-darkly-bootstrap.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}