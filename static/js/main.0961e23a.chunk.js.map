{"version":3,"sources":["utility/helpers.js","utility/utils.js","components/YieldTable.js","contexts/filters.context.js","components/Filters.js","components/TopNavbar.js","App.js","reportWebVitals.js","index.js","utility/api.js"],"names":["arrayHasAnyOfArray","assets","desired","exact","d","indexOf","a","numeral","require","formatPercentage","num","text","format","filterPools","pools","filters","desiredCoins","strictFilter","exactMatch","desiredPlatforms","includeSingleAssets","includeLPs","desiredPlatformsArray","trim","toUpperCase","split","filter","pool","map","toLowerCase","length","desiredCoinsArray","exists","arrayHasAllOfArray","array","t","textHasAnyOfArray","platform","columns","dataField","sort","formatter","network","className","logo","Image","src","poolLogoUrl","coinLogoUrl","roundedCircle","asset","name","totalApy","apy","g","Math","pow","log10","isNaN","calcDaily","tradingApr","OverlayTrigger","trigger","overlay","Popover","id","Title","as","Content","Table","striped","bordered","hover","compoundingsPerYear","vaultApr","beefyPerformanceFee","vaultApy","lpFee","Button","variant","tvl","YieldTable","yields","keyField","data","bootstrap4","defaultSorted","order","emptyFilters","defaultFilters","FiltersContext","createContext","Filters","poolCount","useContext","setFilters","handleChange","event","target","value","handleCheckBoxChange","checked","Jumbotron","Form","Group","Label","Control","defaultValue","size","type","placeholder","onChange","Check","Input","defaultChecked","for","ButtonGroup","onClick","TopNavbar","useState","copied","setCopied","Navbar","bg","Brand","href","alt","Nav","placement","Tooltip","onCopy","setTimeout","Link","App","setYields","useEffect","getYieldsWithPrices","_yields","fetchData","filteredYields","self","Container","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","networks","network_ids","getPools","fetch","result","beginningText","endingText","substr","replaceAll","jsonObj","eval","network_id","key","fetchAllPools","Promise","all","Object","keys","allCombined","concat","f","json","prices","apyBreakdowns","tvls","lpPrice","tvlToken","apyBreakdown","b","ticker","path"],"mappings":"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","file":"static/js/main.0961e23a.chunk.js","sourcesContent":["export const textHasAnyOfArray = (text, array, exact=false) => {\r\n  for(const t of array) {\r\n    if(exact) {\r\n      if(text === t) return true\r\n    }\r\n    else if(text.indexOf(t) !== -1) return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport const arrayHasAnyOfArray = (assets, desired, exact=false) => {\r\n  for(const d of desired) {\r\n    if(exact) {\r\n      if(assets.indexOf(d) !== -1) return true\r\n    }\r\n    else {\r\n      for(const a of assets)\r\n        if(a.indexOf(d) !== -1) return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport const arrayHasAllOfArray = (assets, desired, exact=false) => {\r\n  for(const a of assets) {\r\n    if(exact) {\r\n      if(desired.indexOf(a) === -1) return false\r\n    }\r\n    else {\r\n      let exists = false\r\n      for(const d of desired) {\r\n        if(a.indexOf(d) !== -1) {\r\n          exists = true\r\n          break\r\n        }\r\n      }\r\n      if(!exists) return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","import {arrayHasAllOfArray, arrayHasAnyOfArray, textHasAnyOfArray} from './helpers'\r\n\r\nvar numeral = require('numeral')\r\n\r\nexport const calcDaily = apy => {\r\n  const g = Math.pow(10, Math.log10(apy + 1) / 365) - 1;\r\n\r\n  if (isNaN(g)) {\r\n    return 0;\r\n  }\r\n\r\n  return g;\r\n}\r\n\r\nexport const formatPercentage = (num) => {\r\n  const text = numeral(num).format('0.00a%')\r\n  return text.indexOf('NaN') !== -1 ? '🔥' : text\r\n}\r\n\r\nexport const formatInteger = (num) => {\r\n  return numeral(num).format('0,0')\r\n}\r\n\r\nexport const formatFiat = (num) => {\r\n  return numeral(num).format('$0,0.0a')\r\n}\r\n\r\nexport const filterPools = (pools, filters) => {\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\r\n  const desiredPlatformsArray = desiredPlatforms.trim().toUpperCase().split(' ')\r\n\r\n  return pools.filter(pool => {\r\n    const assets = pool.assets.map(a => a.toLowerCase())\r\n\r\n    if(!includeLPs && pool.assets.length > 1) return false\r\n    if(!includeSingleAssets && pool.assets.length === 1) return false\r\n\r\n    // Filter coins\r\n    const desiredCoinsArray = desiredCoins.trim().toLowerCase().split(' ')\r\n    if(desiredCoinsArray.length > 0) {\r\n      // Single asset\r\n      if(pool.assets.length === 1) {\r\n        if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n      }\r\n      // Liquidity Pool\r\n      else {\r\n        if(strictFilter) {\r\n          if(!arrayHasAllOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n        else {\r\n          if(!arrayHasAnyOfArray(assets, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n      }\r\n    }\r\n\r\n    // Filter platforms\r\n    if(desiredPlatformsArray.length > 0)\r\n      if(!textHasAnyOfArray(pool.platform.toUpperCase(), desiredPlatformsArray)) return false\r\n\r\n    return true\r\n  })\r\n}","import React from 'react'\r\nimport './YieldTable.scss'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport {Image, OverlayTrigger, Popover} from 'react-bootstrap'\r\nimport {coinLogoUrl, poolLogoUrl} from '../utility/api'\r\nimport {calcDaily, formatFiat, formatInteger, formatPercentage} from '../utility/utils'\r\n\r\nconst poolFormatter = pool =>\r\n  <div className='pool-name'>\r\n    <span>{pool.logo ?\r\n            <Image src={poolLogoUrl(pool.logo)} /> :\r\n          pool.assets.length === 1 ?\r\n            <Image src={coinLogoUrl(pool.assets[0])} roundedCircle /> :\r\n              pool.assets.map(asset => <Image className='stacked-logo' key={asset} src={coinLogoUrl(asset)} roundedCircle />)\r\n        } {pool.name}</span>\r\n  </div>\r\n\r\nconst networkFormatter = network => network.toUpperCase()\r\n\r\nconst apyFormatter = totalApy => formatPercentage(totalApy)\r\n\r\nconst dailyFormatter = totalApy => formatPercentage(calcDaily(totalApy))\r\n\r\nconst tradingFeesFormatter = pool =>\r\npool.tradingApr ?\r\n  <OverlayTrigger\r\n    trigger={['focus']}\r\n    overlay={\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">APY Breakdown</Popover.Title>\r\n        <Popover.Content>\r\n          <Table striped bordered hover>\r\n            <tbody>\r\n            {pool.compoundingsPerYear && <tr>\r\n              <td>Compounds </td>\r\n              <td>{formatInteger(pool.compoundingsPerYear)}</td>\r\n            </tr>}\r\n            {pool.vaultApr && <tr>\r\n              <td>Vault APR</td>\r\n              <td>{formatPercentage(pool.vaultApr)}</td>\r\n            </tr>}\r\n            {pool.beefyPerformanceFee && <tr>\r\n              <td>Beefy Fee</td>\r\n              <td>{formatPercentage(pool.beefyPerformanceFee)}</td>\r\n            </tr>}\r\n            {pool.vaultApy && <tr>\r\n              <td>Vault APY</td>\r\n              <td>{formatPercentage(pool.vaultApy)}</td>\r\n            </tr>}\r\n            {pool.lpFee && <tr>\r\n              <td>LP Fee</td>\r\n              <td>{formatPercentage(pool.lpFee)}</td>\r\n            </tr>}\r\n            {pool.tradingApr && <tr>\r\n              <td>Trading APR</td>\r\n              <td>{formatPercentage(pool.tradingApr)}</td>\r\n            </tr>}\r\n            {pool.totalApy && <tr>\r\n              <td>Total APY</td>\r\n              <td>{formatPercentage(pool.totalApy)}</td>\r\n            </tr>}\r\n            </tbody>\r\n          </Table>\r\n        </Popover.Content>\r\n      </Popover>\r\n    }\r\n  >\r\n    <Button variant=\"success\">Included</Button>\r\n  </OverlayTrigger> : pool.assets.length === 1 ? '-' : \"Unknown\"\r\n\r\nconst tvlFormatter = tvl => formatFiat(tvl)\r\n\r\nconst columns = [\r\n  {\r\n    dataField: \"network\",\r\n    text: \"Network\",\r\n    sort: true,\r\n    formatter: networkFormatter\r\n  },\r\n\r\n  {\r\n    dataField: \"platform\",\r\n    text: \"Platform\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"self\",\r\n    text: \"Pool\",\r\n    formatter: poolFormatter\r\n  },\r\n  {\r\n    dataField: \"totalApy\",\r\n    text: \"APY\",\r\n    sort: true,\r\n    formatter: apyFormatter\r\n  },\r\n  {\r\n    dataField: \"totalApy\",\r\n    text: \"Daily\",\r\n    sort: true,\r\n    formatter: dailyFormatter\r\n  },\r\n  {\r\n    dataField: \"self\",\r\n    text: \"Trading Fees\",\r\n    formatter: tradingFeesFormatter\r\n  },\r\n  {\r\n    dataField: \"tvl\",\r\n    text: \"TVL\",\r\n    sort: true,\r\n    formatter: tvlFormatter\r\n  }\r\n]\r\n\r\nconst YieldTable = ({yields}) =>\r\n  <BootstrapTable\r\n    keyField=\"key\"\r\n    data={yields}\r\n    columns={columns}\r\n    striped\r\n    hover\r\n    bootstrap4\r\n    defaultSorted={[{ dataField: 'totalApy', order: 'desc'}]}/>\r\n\r\nexport default YieldTable\r\n","import { createContext } from 'react'\r\n\r\nexport const emptyFilters = {\r\n  desiredCoins: '',\r\n  strictFilter: true,\r\n  exactMatch: false,\r\n  desiredPlatforms: '',\r\n  includeSingleAssets: true,\r\n  includeLPs: true\r\n}\r\n\r\nexport const defaultFilters = {\r\n  ...emptyFilters,\r\n  desiredCoins: 'usdc dai busd usdt',\r\n  desiredPlatforms: ''\r\n}\r\n\r\nconst FiltersContext = createContext(defaultFilters)\r\n\r\nexport default FiltersContext","import React, {useContext} from 'react'\r\n\r\nimport './Filters.scss'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport {Form, ButtonGroup} from 'react-bootstrap'\r\nimport FiltersContext, {emptyFilters, defaultFilters} from '../contexts/filters.context'\r\n\r\nconst Filters = ({poolCount}) => {\r\n  const { filters, setFilters } = useContext(FiltersContext)\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target\r\n\r\n    setFilters({...filters, [name]: value })\r\n  }\r\n\r\n  const handleCheckBoxChange = event => {\r\n    const { checked, name } = event.target\r\n\r\n    setFilters({...filters, [name]: checked })\r\n  }\r\n\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\r\n\r\n  return (\r\n      <Jumbotron className='filters'>\r\n        <Form.Group>\r\n          <Form.Label>💎 Coins to Ride</Form.Label>\r\n          <Form.Control name='desiredCoins' value={desiredCoins} defaultValue={desiredCoins} size=\"sm\" type=\"text\" placeholder=\"e.g. usdc dai busd\" onChange={handleChange} />\r\n          <Form.Check>\r\n            <Form.Check.Input id='strictFilter' name='strictFilter' checked={strictFilter} defaultChecked={strictFilter} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='strictFilter'>Show ONLY these coins <span className='silent'>(USDC won't show USDC-DAI)</span></Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='exactMatch' name='exactMatch' checked={exactMatch} defaultChecked={exactMatch} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='exactMatch'>Exact Match <span className='silent'>(USDT won't match fUSDT)</span></Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeLPs' name='includeLPs' checked={includeLPs} defaultChecked={includeLPs} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='includeLPs'>Include Liquidity Pools</Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeSingleAssets' name='includeSingleAssets' checked={includeSingleAssets} defaultChecked={includeSingleAssets} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='includeSingleAssets'>Include Single Assets</Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Label>🏰 Platforms to Ride</Form.Label>\r\n          <Form.Control name='desiredPlatforms' value={desiredPlatforms} defaultValue={desiredPlatforms} size=\"sm\" type=\"text\" placeholder=\"e.g. cake aave sushi\" onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <span>{poolCount === 0 ? 'No pools found, please check your filters' : `Found ${poolCount} pool${poolCount === 1 ? '' : 's'} on 🐮 Beefy Finance.`}</span>\r\n        <ButtonGroup className='reset-filters-btn'>\r\n          <Button size='sm' variant='info' onClick={() => { setFilters(emptyFilters)}}>Clear Filters</Button>\r\n          <Button size='sm' variant='success' onClick={() => { setFilters(defaultFilters)}}>Default Filters</Button>\r\n        </ButtonGroup>\r\n      </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import {Nav, Navbar, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport './TopNavbar.scss'\r\nimport {useState} from 'react'\r\n\r\nconst TopNavbar = () => {\r\n  const [copied, setCopied] = useState(false)\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/hat_short.png\"\r\n            className=\"navbar-image\"\r\n          />{'   '}\r\n          <span className='navbar-title'>yield.rodeo</span>\r\n        </Navbar.Brand>\r\n        <Nav className=\"ml-auto\">\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={<Tooltip>{copied ? 'Copied!' : 'Click to copy!'}</Tooltip>}\r\n          >\r\n            <CopyToClipboard text={'0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C'}\r\n            onCopy={() => {\r\n              setCopied(true)\r\n              setTimeout(() => { setCopied(false) },1000)\r\n            }}>\r\n              <span>❤️ 0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C ❤️</span>\r\n            </CopyToClipboard>\r\n          </OverlayTrigger>\r\n        </Nav>\r\n      <Nav>\r\n        <Nav.Link className='navbar-contact' href={'https://naezith.com/?id=contact'} target=\"_blank\">Contact</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar","import React, {useEffect, useState} from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport './App.css'\r\nimport {getYieldsWithPrices} from './utility/api'\r\nimport YieldTable from './components/YieldTable'\r\nimport Filters from './components/Filters'\r\nimport FiltersContext, {defaultFilters} from './contexts/filters.context'\r\nimport TopNavbar from './components/TopNavbar'\r\nimport {filterPools} from './utility/utils'\r\n\r\nconst App = () => {\r\n  const [yields, setYields] = useState([])\r\n  const [filters, setFilters] = useState(defaultFilters)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // Get yields\r\n      const _yields = await getYieldsWithPrices()\r\n      setYields(_yields)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const filteredYields = filterPools(yields, filters).map(pool => ({ ...pool, self: pool }))\r\n  return (\r\n    <div className='full-height'>\r\n      <Container className=\"p-3 App\">\r\n        <TopNavbar />\r\n      </Container>\r\n\r\n      <Container className=\"p-3 App\">\r\n        <FiltersContext.Provider value={{filters, setFilters}}>\r\n          <Filters poolCount={filteredYields.length}/>\r\n          <YieldTable yields={filteredYields} />\r\n        </FiltersContext.Provider>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootswatch-darkly-bootstrap.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const networks = ['avalanche', 'bsc', 'fantom', 'heco', 'polygon']\r\nconst network_ids = {\r\n  'bsc': 56,\r\n  'heco': 128,\r\n  'polygon': 137,\r\n  'fantom': 250,\r\n  'avalanche': 43114\r\n}\r\n\r\nconst getPools = async (network, type) => {\r\n  const result = await fetch(\r\n      type === 'stake' ?\r\n          `https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/stake/${network}_stake.js` :\r\n          `https://raw.githubusercontent.com/beefyfinance/beefy-app/prod/src/features/configure/vault/${network}_pools.js`\r\n  )\r\n\r\n  let text = await result.text()\r\n  const beginningText = ' = ['\r\n  const endingText = '];'\r\n  text = text.substr(text.indexOf(beginningText) + beginningText.length - 1,\r\n      text.indexOf(endingText) - endingText.length)\r\n      .replaceAll('earnContractAbi: govPoolABI,', '')\r\n      .replaceAll(`, '4BELT'`, '')\r\n\r\n  const jsonObj = eval(text)\r\n\r\n  for(let pool of jsonObj) {\r\n    pool.network = network\r\n    pool.network_id = network_ids[network]\r\n    pool.key = network + '-' + pool.id\r\n    pool.type = type // stake or pool\r\n  }\r\n\r\n  return jsonObj\r\n}\r\n\r\nconst fetchAllPools = async () => {\r\n  let pools = {\r\n    'stake': {},\r\n    'pool': {},\r\n  }\r\n\r\n  let lengths = 0\r\n  await Promise.all(Object.keys(pools).map(async type => {\r\n    await Promise.all(networks.map(async network => {\r\n      pools[type][network] = await getPools(network, type)\r\n      lengths += pools[type][network].length\r\n    }))\r\n  }))\r\n\r\n\r\n  let allCombined = []\r\n\r\n  for(let type of Object.keys(pools))\r\n    for(let network of networks)\r\n      allCombined = allCombined.concat(pools[type][network])\r\n\r\n  return allCombined\r\n}\r\n\r\nexport const getYieldsWithPrices = async () => {\r\n  const yields = await fetchAllPools()\r\n  const prices = await (await fetch('https://api.beefy.finance/lps')).json()\r\n  const apyBreakdowns = await (await fetch('https://api.beefy.finance/apy/breakdown')).json()\r\n  const tvls = await (await fetch('https://api.beefy.finance/tvl')).json()\r\n\r\n  return yields.map(pool => {\r\n    const lpPrice = prices[pool.id]\r\n    const tvlToken = tvls[pool.network_id][pool.id]\r\n    const apyBreakdown = apyBreakdowns[pool.id]\r\n    return {\r\n      ...pool,\r\n      lpPrice: lpPrice,\r\n      tvl: tvlToken,\r\n      ...apyBreakdown\r\n    }\r\n  }).filter(pool => pool.tvl > 0 && pool.totalApy > 0.0001)\r\n      .sort((a, b) => a.totalApy < b.totalApy ? 1 : -1)\r\n}\r\n\r\nexport const coinLogoUrl = ticker => 'https://trustwallet-assets-api.vercel.app/api/symbol/'  + ticker\r\nexport const poolLogoUrl = path => 'https://raw.githubusercontent.com/beefyfinance/beefy-app/master/src/images/'  + path"],"sourceRoot":""}