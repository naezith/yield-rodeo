{"version":3,"sources":["utility/api.js","utility/helpers.js","utility/utils.js","components/YieldTable.js","contexts/filters.context.js","components/Filters.js","components/TopNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["getYields","a","fetch","json","result","Object","keys","map","key","pool","split","w","toUpperCase","platform","coinA","coinB","filter","totalApy","sort","b","getLpPrices","getTvls","tvls","network","getYieldsWithPrices","yields","prices","lpPrice","tvlToken","tvl","coinLogoUrl","ticker","textHasAnyOfArray","text","array","exact","t","indexOf","numeral","require","getPoolName","formatPercentage","num","format","columns","dataField","formatter","Container","className","Row","Col","Image","src","roundedCircle","apy","g","Math","pow","log10","isNaN","calcDaily","tradingApr","OverlayTrigger","trigger","overlay","Popover","id","Title","as","Content","Table","striped","bordered","hover","compoundingsPerYear","vaultApr","beefyPerformanceFee","vaultApy","lpFee","Button","variant","YieldTable","keyField","data","bootstrap4","defaultSorted","order","emptyFilters","desiredCoins","strictFilter","exactMatch","desiredPlatforms","includeSingleAssets","includeLPs","defaultFilters","FiltersContext","createContext","Filters","poolCount","useContext","filters","setFilters","handleChange","event","target","value","name","handleCheckBoxChange","checked","Jumbotron","Form","Group","Label","Control","defaultValue","size","type","placeholder","onChange","Check","Input","defaultChecked","for","ButtonGroup","onClick","TopNavbar","useState","copied","setCopied","Navbar","bg","Brand","href","alt","Nav","placement","Tooltip","onCopy","setTimeout","Link","App","setYields","useEffect","_yields","fetchData","filteredYields","pools","desiredPlatformsArray","trim","toLowerCase","undefined","desiredCoinsArray","length","filterPools","self","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c696bde3.chunk.js","sourcesContent":["export const getYields = async () => {\r\n  const result = await (await fetch('https://api.beefy.finance/apy/breakdown')).json()\r\n\r\n  return Object.keys(result).map(key => {\r\n    const pool = result[key]\r\n    const [platform, coinA, coinB] = key.split('-').map(w => w.toUpperCase())\r\n    return {\r\n      key: key,\r\n      platform, coinA, coinB,\r\n      ...pool\r\n    }\r\n  }).filter(pool => pool.totalApy > 0.01)\r\n    .sort((a, b) => a.totalApy < b.totalApy ? 1 : -1)\r\n}\r\n\r\nexport const getLpPrices = async () => {\r\n  const result = await (await fetch('https://api.beefy.finance/lps')).json()\r\n  return result\r\n}\r\n\r\nexport const getTvls = async () => {\r\n  const result = await (await fetch('https://api.beefy.finance/tvl')).json()\r\n  let tvls = {}\r\n  for(const network of Object.keys(result)) {\r\n    tvls = { ...tvls, ...result[network] }\r\n  }\r\n  return tvls\r\n}\r\n\r\nexport const getYieldsWithPrices = async () => {\r\n  const yields = await getYields()\r\n  const prices = await getLpPrices()\r\n  const tvls = await getTvls()\r\n  return yields.map(pool => {\r\n\r\n    const lpPrice = prices[pool.key]\r\n    const tvlToken = tvls[pool.key]\r\n    return {\r\n    ...pool,\r\n      lpPrice: lpPrice,\r\n      tvl: tvlToken\r\n    }\r\n  }).filter(pool => pool.tvl > 0)\r\n}\r\n\r\nexport const poolLogoUrl = (coinA, coinB) => 'https://farm.army/token/' + coinA.toLowerCase() + '-' + coinB.toLowerCase() + '.png'\r\nexport const coinLogoUrl = ticker => 'https://trustwallet-assets-api.vercel.app/api/symbol/'  + ticker","export const textHasAnyOfArray = (text, array, exact=false) => {\r\n  for(const t of array) {\r\n    if(exact) {\r\n      if(text === t) return true\r\n    }\r\n    else if(text.indexOf(t) !== -1) return true\r\n  }\r\n  return false\r\n}","import {textHasAnyOfArray} from './helpers'\r\n\r\nvar numeral = require('numeral')\r\n\r\nexport const calcDaily = apy => {\r\n  const g = Math.pow(10, Math.log10(apy + 1) / 365) - 1;\r\n\r\n  if (isNaN(g)) {\r\n    return 0;\r\n  }\r\n\r\n  return g;\r\n}\r\n\r\nexport const getPoolName = (pool) => `${pool.coinA}${pool.coinB ? ` + ${pool.coinB}` : ''}`\r\n\r\nexport const formatPercentage = (num) => {\r\n  const text = numeral(num).format('0.00a%')\r\n  return text.indexOf('NaN') !== -1 ? '🔥' : text\r\n}\r\n\r\nexport const formatInteger = (num) => {\r\n  return numeral(num).format('0,0')\r\n}\r\n\r\nexport const formatFiat = (num) => {\r\n  return numeral(num).format('$0,0.0a')\r\n}\r\n\r\nexport const filterPools = (pools, filters) => {\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\r\n  const desiredPlatformsArray = desiredPlatforms.trim().toUpperCase().split(' ')\r\n\r\n  return pools.filter(pool => {\r\n    const coinA = pool.coinA.toLowerCase()\r\n    const coinB = !pool.coinB ? undefined : pool.coinB.toLowerCase()\r\n\r\n    if(!includeLPs && coinB) return false\r\n    if(!includeSingleAssets && !coinB) return false\r\n\r\n    // Filter coins\r\n    const desiredCoinsArray = desiredCoins.trim().toLowerCase().split(' ')\r\n    if(desiredCoinsArray.length > 0) {\r\n      // Single asset\r\n      if(!pool.coinB) {\r\n        if(!textHasAnyOfArray(coinA, desiredCoinsArray, exactMatch)) return false\r\n      }\r\n      // Liquidity Pool\r\n      else {\r\n        if(strictFilter) {\r\n          if(!textHasAnyOfArray(coinA, desiredCoinsArray, exactMatch) || !textHasAnyOfArray(coinB, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n        else {\r\n          if(!textHasAnyOfArray(coinA, desiredCoinsArray, exactMatch) && !textHasAnyOfArray(coinB, desiredCoinsArray, exactMatch)) return false\r\n        }\r\n      }\r\n    }\r\n\r\n    // Filter platforms\r\n    if(desiredPlatformsArray.length > 0)\r\n      if(!textHasAnyOfArray(pool.platform.toUpperCase(), desiredPlatformsArray)) return false\r\n\r\n    return true\r\n  })\r\n}","import React from 'react'\r\nimport './YieldTable.scss'\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport {Col, Image, OverlayTrigger, Popover} from 'react-bootstrap'\r\nimport {coinLogoUrl} from '../utility/api'\r\nimport {calcDaily, formatFiat, formatInteger, formatPercentage, getPoolName} from '../utility/utils'\r\n\r\nconst poolFormatter = pool =>\r\n  <Container className='pool-name'>\r\n    <Row>\r\n      <Col className='logo-col'>\r\n        <Image src={coinLogoUrl(pool.coinA)} roundedCircle/>\r\n      </Col>\r\n      <Col>\r\n        {getPoolName(pool)}\r\n      </Col>\r\n      <Col className='logo-col'>\r\n        <Image src={coinLogoUrl(pool.coinB || pool.coinA)} roundedCircle/>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n\r\nconst apyFormatter = totalApy => formatPercentage(totalApy)\r\n\r\nconst dailyFormatter = totalApy => formatPercentage(calcDaily(totalApy))\r\n\r\nconst tradingFeesFormatter = pool =>\r\npool.tradingApr ?\r\n  <OverlayTrigger\r\n    trigger={['focus']}\r\n    overlay={\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">APY Breakdown</Popover.Title>\r\n        <Popover.Content>\r\n          <Table striped bordered hover>\r\n            <tbody>\r\n            {pool.compoundingsPerYear && <tr>\r\n              <td>Compounds </td>\r\n              <td>{formatInteger(pool.compoundingsPerYear)}</td>\r\n            </tr>}\r\n            {pool.vaultApr && <tr>\r\n              <td>Vault APR</td>\r\n              <td>{formatPercentage(pool.vaultApr)}</td>\r\n            </tr>}\r\n            {pool.beefyPerformanceFee && <tr>\r\n              <td>Beefy Fee</td>\r\n              <td>{formatPercentage(pool.beefyPerformanceFee)}</td>\r\n            </tr>}\r\n            {pool.vaultApy && <tr>\r\n              <td>Vault APY</td>\r\n              <td>{formatPercentage(pool.vaultApy)}</td>\r\n            </tr>}\r\n            {pool.lpFee && <tr>\r\n              <td>LP Fee</td>\r\n              <td>{formatPercentage(pool.lpFee)}</td>\r\n            </tr>}\r\n            {pool.tradingApr && <tr>\r\n              <td>Trading APR</td>\r\n              <td>{formatPercentage(pool.tradingApr)}</td>\r\n            </tr>}\r\n            {pool.totalApy && <tr>\r\n              <td>Total APY</td>\r\n              <td>{formatPercentage(pool.totalApy)}</td>\r\n            </tr>}\r\n            </tbody>\r\n          </Table>\r\n        </Popover.Content>\r\n      </Popover>\r\n    }\r\n  >\r\n    <Button variant=\"success\">Included</Button>\r\n  </OverlayTrigger> : !pool.coinB ? '-' : \"Unknown\"\r\n\r\nconst tvlFormatter = tvl => formatFiat(tvl)\r\n\r\nconst columns = [\r\n  {\r\n    dataField: \"platform\",\r\n    text: \"Platform\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"self\",\r\n    text: \"Pool\",\r\n    formatter: poolFormatter\r\n  },\r\n  {\r\n    dataField: \"totalApy\",\r\n    text: \"APY\",\r\n    sort: true,\r\n    formatter: apyFormatter\r\n  },\r\n  {\r\n    dataField: \"totalApy\",\r\n    text: \"Daily\",\r\n    sort: true,\r\n    formatter: dailyFormatter\r\n  },\r\n  {\r\n    dataField: \"self\",\r\n    text: \"Trading Fees\",\r\n    formatter: tradingFeesFormatter\r\n  },\r\n  {\r\n    dataField: \"tvl\",\r\n    text: \"TVL\",\r\n    sort: true,\r\n    formatter: tvlFormatter\r\n  }\r\n]\r\n\r\nconst YieldTable = ({yields}) =>\r\n  <BootstrapTable\r\n    keyField=\"key\"\r\n    data={yields}\r\n    columns={columns}\r\n    striped\r\n    hover\r\n    bootstrap4\r\n    defaultSorted={[{ dataField: 'totalApy', order: 'desc'}]}/>\r\n\r\nexport default YieldTable\r\n","import { createContext } from 'react'\r\n\r\nexport const emptyFilters = {\r\n  desiredCoins: '',\r\n  strictFilter: true,\r\n  exactMatch: false,\r\n  desiredPlatforms: '',\r\n  includeSingleAssets: true,\r\n  includeLPs: true\r\n}\r\n\r\nexport const defaultFilters = {\r\n  ...emptyFilters,\r\n  desiredCoins: 'usdc dai busd',\r\n  desiredPlatforms: 'cake auto aave sushi quick venus 1inch ellipsis mdex'\r\n}\r\n\r\nconst FiltersContext = createContext(defaultFilters)\r\n\r\nexport default FiltersContext","import React, {useContext} from 'react'\r\n\r\nimport './Filters.scss'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport {Form, ButtonGroup} from 'react-bootstrap'\r\nimport FiltersContext, {emptyFilters, defaultFilters} from '../contexts/filters.context'\r\n\r\nconst Filters = ({poolCount}) => {\r\n  const { filters, setFilters } = useContext(FiltersContext)\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target\r\n\r\n    setFilters({...filters, [name]: value })\r\n  }\r\n\r\n  const handleCheckBoxChange = event => {\r\n    const { checked, name } = event.target\r\n\r\n    setFilters({...filters, [name]: checked })\r\n  }\r\n\r\n  const { desiredCoins, strictFilter, exactMatch, desiredPlatforms, includeSingleAssets, includeLPs } = filters\r\n\r\n  return (\r\n      <Jumbotron className='filters'>\r\n        <Form.Group>\r\n          <Form.Label>💎 Coins to Ride</Form.Label>\r\n          <Form.Control name='desiredCoins' value={desiredCoins} defaultValue={desiredCoins} size=\"sm\" type=\"text\" placeholder=\"e.g. usdc dai busd\" onChange={handleChange} />\r\n          <Form.Check>\r\n            <Form.Check.Input id='strictFilter' name='strictFilter' checked={strictFilter} defaultChecked={strictFilter} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='strictFilter'>Show ONLY these coins <span className='silent'>(USDC won't show USDC-DAI)</span></Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='exactMatch' name='exactMatch' checked={exactMatch} defaultChecked={exactMatch} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='exactMatch'>Exact Match <span className='silent'>(USDC won't match ibUSDC)</span></Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeLPs' name='includeLPs' checked={includeLPs} defaultChecked={includeLPs} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='includeLPs'>Include Liquidity Pools</Form.Check.Label>\r\n          </Form.Check>\r\n          <Form.Check>\r\n            <Form.Check.Input id='includeSingleAssets' name='includeSingleAssets' checked={includeSingleAssets} defaultChecked={includeSingleAssets} type=\"checkbox\" onChange={handleCheckBoxChange} />\r\n            <Form.Check.Label for='includeSingleAssets'>Include Single Assets</Form.Check.Label>\r\n          </Form.Check>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <Form.Group>\r\n          <Form.Label>🏰 Platforms to Ride</Form.Label>\r\n          <Form.Control name='desiredPlatforms' value={desiredPlatforms} defaultValue={desiredPlatforms} size=\"sm\" type=\"text\" placeholder=\"e.g. cake aave sushi\" onChange={handleChange}/>\r\n        </Form.Group>\r\n\r\n        <hr/>\r\n\r\n        <span>{poolCount === 0 ? 'No pools found, please check your filters' : `Found ${poolCount} pool${poolCount === 1 ? '' : 's'} on 🐮 Beefy Finance.`}</span>\r\n        <ButtonGroup className='reset-filters-btn'>\r\n          <Button size='sm' variant='info' onClick={() => { setFilters(emptyFilters)}}>Clear Filters</Button>\r\n          <Button size='sm' variant='success' onClick={() => { setFilters(defaultFilters)}}>Default Filters</Button>\r\n        </ButtonGroup>\r\n      </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import {Nav, Navbar, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport './TopNavbar.scss'\r\nimport {useState} from 'react'\r\n\r\nconst TopNavbar = () => {\r\n  const [copied, setCopied] = useState(false)\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/hat_short.png\"\r\n            className=\"navbar-image\"\r\n          />{'   '}\r\n          <span className='navbar-title'>yield.rodeo</span>\r\n        </Navbar.Brand>\r\n        <Nav className=\"ml-auto\">\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={<Tooltip>{copied ? 'Copied!' : 'Click to copy!'}</Tooltip>}\r\n          >\r\n            <CopyToClipboard text={'0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C'}\r\n            onCopy={() => {\r\n              setCopied(true)\r\n              setTimeout(() => { setCopied(false) },1000)\r\n            }}>\r\n              <span>❤️ 0x6e1b11ad54068dd3C7A2cAf334A7010f0B59511C ❤️</span>\r\n            </CopyToClipboard>\r\n          </OverlayTrigger>\r\n        </Nav>\r\n      <Nav>\r\n        <Nav.Link className='navbar-contact' href={'https://naezith.com/?id=contact'} target=\"_blank\">Contact</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar","import React, {useEffect, useState} from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport './App.css'\r\nimport {getYieldsWithPrices} from './utility/api'\r\nimport YieldTable from './components/YieldTable'\r\nimport Filters from './components/Filters'\r\nimport FiltersContext, {defaultFilters} from './contexts/filters.context'\r\nimport TopNavbar from './components/TopNavbar'\r\nimport {filterPools} from './utility/utils'\r\n\r\nconst App = () => {\r\n  const [yields, setYields] = useState([])\r\n  const [filters, setFilters] = useState(defaultFilters)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // Get yields\r\n      const _yields = await getYieldsWithPrices()\r\n      setYields(_yields)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const filteredYields = filterPools(yields, filters).map(pool => ({ ...pool, self: pool }))\r\n  return (\r\n    <div className='full-height'>\r\n      <Container className=\"p-3 App\">\r\n        <TopNavbar />\r\n      </Container>\r\n\r\n      <Container className=\"p-3 App\">\r\n        <FiltersContext.Provider value={{filters, setFilters}}>\r\n          <Filters poolCount={filteredYields.length}/>\r\n          <YieldTable yields={filteredYields} />\r\n        </FiltersContext.Provider>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootswatch-darkly-bootstrap.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}